{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["emailRegex","RegExp","App","props","handleSubmit","event","state","firstName","lastName","email","password","preventDefault","formErrors","valid","Object","values","forEach","val","length","formValid","console","log","handleChange","target","name","value","test","setState","this","className","onSubmit","noValidate","htmlFor","type","placeholder","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7817fee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = (formErrors) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n\n  return valid;\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n\n  }\n\n  handleSubmit = (event) => {\n    const {firstName, lastName, email,password} = this.state;\n    event.preventDefault(); //Stopping the FORM from submitting on us.\n    if (formValid(this.state.formErrors) && firstName  !== '' && lastName !== '' && email !== '' && password !== '' ) {\n      console.log(` ---Successful form ---\n      First name: ${this.state.firstName}\n      Last name: ${this.state.lastName}\n      Email: ${this.state.email}\n      Password: ${this.state.password}`);\n    }\n    else {\n      console.log('Form invalid');\n    }\n  };\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let formErrors = this.state.formErrors;\n\n    switch (name) {\n      case 'firstName':\n        formErrors.firstName = value.length < 3 ?\n          'minimum 3 characters required' :\n          '';\n        break;\n\n      case \"lastName\":\n        formErrors.lastName = value.length < 3 ?\n          'minimum 3 characters required' :\n          '';\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value) ?\n          '' :\n          'invalid email address';\n        break;\n      case \"password\":\n        formErrors.password = value.length < 6 ?\n          'minimum 6 characters required' :\n          '';\n        break;\n      default:\n        break;\n\n\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  }\n  render() {\n    const { formErrors } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-wrapper\">\n          <h1>Create Account</h1>\n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className=\"firstName\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input\n                type=\"text\"\n                className={formErrors.firstName.length > 0? \"error\": null}\n                placeholder=\"First Name\"\n                name=\"firstName\"\n                noValidate\n                onChange={this.handleChange} />\n\n              {formErrors.firstName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\n              )}\n\n            </div>\n            <div className=\"lastName\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input\n\n                className={formErrors.lastName.length > 0? \"error\": null}\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"lastName\"\n                noValidate\n                onChange={this.handleChange} />\n\n              {formErrors.lastName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\n              )}\n            </div>\n            <div className=\"email\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n\n                className={formErrors.email.length > 0? \"error\": null}\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                noValidate\n                onChange={this.handleChange} />\n\n              {formErrors.email.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.email}</span>\n              )}\n            </div>\n            <div className=\"password\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n\n                className={formErrors.password.length > 0? \"error\": null}\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                noValidate\n                onChange={this.handleChange} />\n\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.password}</span>\n              )}\n            </div>\n            <div className=\"createAccount\">\n              <button type=\"submit\">Create Account</button>\n              <small>Already Have an Account?</small>\n            </div>\n          </form>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}